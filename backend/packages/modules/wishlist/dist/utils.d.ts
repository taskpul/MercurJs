import { MedusaContainer } from "@medusajs/framework";
import { WishlistItem } from "@mercurjs/framework";
export declare function getWishlistFromCustomerId(container: MedusaContainer, customerId: string): Promise<any>;
export declare function calculateWishlistProductsPrice(container: MedusaContainer, wishlists: WishlistItem[]): Promise<{
    products: {
        calculated_amount: import("@medusajs/framework/types").BigNumberValue | null;
        variant_id: string;
        price_set_id: string | undefined;
        currency_code: string | undefined;
        id: string;
        title: string;
        handle: string;
        subtitle: string | null;
        description: string | null;
        is_giftcard: boolean;
        status: import("@medusajs/framework/types").ProductStatus;
        thumbnail: string | null;
        width: number | null;
        weight: number | null;
        length: number | null;
        height: number | null;
        origin_country: string | null;
        hs_code: string | null;
        mid_code: string | null;
        material: string | null;
        collection: import("@medusajs/framework/types").ProductCollectionDTO | null;
        collection_id: string | null;
        categories?: import("@medusajs/framework/types").ProductCategoryDTO[] | null;
        type: import("@medusajs/framework/types").ProductTypeDTO | null;
        type_id: string | null;
        tags: import("@medusajs/framework/types").ProductTagDTO[];
        options: import("@medusajs/framework/types").ProductOptionDTO[];
        images: import("@medusajs/framework/types").ProductImageDTO[];
        discountable?: boolean;
        external_id: string | null;
        created_at: string | Date;
        updated_at: string | Date;
        deleted_at: string | Date;
        metadata?: import("@medusajs/framework/types").MetadataType;
    }[];
    id: string;
}[]>;
//# sourceMappingURL=utils.d.ts.map