{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/lib/data/collections.ts"],"sourcesContent":["\"use server\"\n\nimport { HttpTypes } from \"@medusajs/types\"\nimport { getCacheOptions } from \"./cookies\"\nimport { sdk } from \"../config\"\n\nexport const retrieveCollection = async (id: string) => {\n  const next = {\n    ...(await getCacheOptions(\"collections\")),\n  }\n\n  return sdk.client\n    .fetch<{ collection: HttpTypes.StoreCollection }>(\n      `/store/collections/${id}`,\n      {\n        next,\n        cache: \"force-cache\",\n      }\n    )\n    .then(({ collection }) => collection)\n}\n\nexport const listCollections = async (\n  queryParams: Record<string, string> = {}\n): Promise<{ collections: HttpTypes.StoreCollection[]; count: number }> => {\n  const next = {\n    ...(await getCacheOptions(\"collections\")),\n  }\n\n  queryParams.limit = queryParams.limit || \"100\"\n  queryParams.offset = queryParams.offset || \"0\"\n\n  return sdk.client\n    .fetch<{ collections: HttpTypes.StoreCollection[]; count: number }>(\n      \"/store/collections\",\n      {\n        query: queryParams,\n        next,\n        cache: \"force-cache\",\n      }\n    )\n    .then(({ collections }) => ({ collections, count: collections.length }))\n}\n\nexport const getCollectionByHandle = async (\n  handle: string\n): Promise<HttpTypes.StoreCollection> => {\n  const next = {\n    ...(await getCacheOptions(\"collections\")),\n  }\n\n  return sdk.client\n    .fetch<HttpTypes.StoreCollectionListResponse>(`/store/collections`, {\n      query: { handle, fields: \"*products\" },\n      next,\n      cache: \"force-cache\",\n    })\n    .then(({ collections }) => collections[0])\n}\n"],"names":[],"mappings":";;;;;;;AAGA;AACA;;;;;;AAEO,MAAM,uCAAgB,GAAhB,qBAAqB,OAAO;IACvC,MAAM,OAAO;QACX,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,kBAAe,AAAD,EAAE,cAAc;IAC1C;IAEA,OAAO,oHAAA,CAAA,MAAG,CAAC,MAAM,CACd,KAAK,CACJ,CAAC,mBAAmB,EAAE,IAAI,EAC1B;QACE;QACA,OAAO;IACT,GAED,IAAI,CAAC,CAAC,EAAE,UAAU,EAAE,GAAK;AAC9B;AAEO,MAAM,uCAAa,GAAb,kBAAkB,OAC7B,cAAsC,CAAC,CAAC;IAExC,MAAM,OAAO;QACX,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,kBAAe,AAAD,EAAE,cAAc;IAC1C;IAEA,YAAY,KAAK,GAAG,YAAY,KAAK,IAAI;IACzC,YAAY,MAAM,GAAG,YAAY,MAAM,IAAI;IAE3C,OAAO,oHAAA,CAAA,MAAG,CAAC,MAAM,CACd,KAAK,CACJ,sBACA;QACE,OAAO;QACP;QACA,OAAO;IACT,GAED,IAAI,CAAC,CAAC,EAAE,WAAW,EAAE,GAAK,CAAC;YAAE;YAAa,OAAO,YAAY,MAAM;QAAC,CAAC;AAC1E;AAEO,MAAM,uCAAmB,GAAnB,wBAAwB,OACnC;IAEA,MAAM,OAAO;QACX,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,kBAAe,AAAD,EAAE,cAAc;IAC1C;IAEA,OAAO,oHAAA,CAAA,MAAG,CAAC,MAAM,CACd,KAAK,CAAwC,CAAC,kBAAkB,CAAC,EAAE;QAClE,OAAO;YAAE;YAAQ,QAAQ;QAAY;QACrC;QACA,OAAO;IACT,GACC,IAAI,CAAC,CAAC,EAAE,WAAW,EAAE,GAAK,WAAW,CAAC,EAAE;AAC7C;;;IApDa;IAgBA;IAsBA;;AAtCA,+OAAA;AAgBA,+OAAA;AAsBA,+OAAA"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/lib/helpers/isBot.ts"],"sourcesContent":["export default function isBot(ua: string) {\n  return ua ? /bot|crawl|spider|slurp|bing|duckduckbot|GPTBot/i.test(ua) : true\n}\n"],"names":[],"mappings":";;;AAAe,SAAS,MAAM,EAAU;IACtC,OAAO,KAAK,kDAAkD,IAAI,CAAC,MAAM;AAC3E"}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 85, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/app/%5Blocale%5D/%28main%29/collections/%5Bhandle%5D/page.tsx"],"sourcesContent":["import NotFound from \"@/app/not-found\"\nimport { Breadcrumbs } from \"@/components/atoms\"\nimport { ProductListingSkeleton } from \"@/components/organisms/ProductListingSkeleton/ProductListingSkeleton\"\nimport { AlgoliaProductsListing, ProductListing } from \"@/components/sections\"\nimport { getCollectionByHandle } from \"@/lib/data/collections\"\nimport isBot from \"@/lib/helpers/isBot\"\nimport { Suspense } from \"react\"\n\nconst ALGOLIA_ID = process.env.NEXT_PUBLIC_ALGOLIA_ID\nconst ALGOLIA_SEARCH_KEY = process.env.NEXT_PUBLIC_ALGOLIA_SEARCH_KEY\n\nconst SingleCollectionsPage = async ({\n  params,\n}: {\n  params: Promise<{ handle: string; locale: string }>\n}) => {\n  const { handle, locale } = await params\n\n  const bot = isBot(navigator.userAgent)\n  const collection = await getCollectionByHandle(handle)\n\n  if (!collection) return <NotFound />\n\n  const breadcrumbsItems = [\n    {\n      path: collection.handle,\n      label: collection.title,\n    },\n  ]\n\n  return (\n    <main className=\"container\">\n      <div className=\"hidden md:block mb-2\">\n        <Breadcrumbs items={breadcrumbsItems} />\n      </div>\n\n      <h1 className=\"heading-xl uppercase\">{collection.title}</h1>\n\n      <Suspense fallback={<ProductListingSkeleton />}>\n        {bot || !ALGOLIA_ID || !ALGOLIA_SEARCH_KEY ? (\n          <ProductListing collection_id={collection.id} showSidebar />\n        ) : (\n          <AlgoliaProductsListing\n            collection_id={collection.id}\n            locale={locale}\n          />\n        )}\n      </Suspense>\n    </main>\n  )\n}\n\nexport default SingleCollectionsPage\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAEA;;;;;;;;;AAKA,MAAM;AACN,MAAM;AAEN,MAAM,wBAAwB,OAAO,EACnC,MAAM,EAGP;IACC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IAEjC,MAAM,MAAM,CAAA,GAAA,8HAAA,CAAA,UAAK,AAAD,EAAE,UAAU,SAAS;IACrC,MAAM,aAAa,MAAM,CAAA,GAAA,iIAAA,CAAA,wBAAqB,AAAD,EAAE;IAE/C,IAAI,CAAC,YAAY,qBAAO,8OAAC,2HAAA,CAAA,UAAQ;;;;;IAEjC,MAAM,mBAAmB;QACvB;YACE,MAAM,WAAW,MAAM;YACvB,OAAO,WAAW,KAAK;QACzB;KACD;IAED,qBACE,8OAAC;QAAK,WAAU;;0BACd,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC,yJAAA,CAAA,cAAW;oBAAC,OAAO;;;;;;;;;;;0BAGtB,8OAAC;gBAAG,WAAU;0BAAwB,WAAW,KAAK;;;;;;0BAEtD,8OAAC,qMAAA,CAAA,WAAQ;gBAAC,wBAAU,8OAAC,mLAAA,CAAA,yBAAsB;;;;;0BACxC,qDACC,8OAAC,kKAAA,CAAA,iBAAc;oBAAC,eAAe,WAAW,EAAE;oBAAE,WAAW;;;;;;;;;;;;;;;;;AAUnE;uCAEe"}},
    {"offset": {"line": 175, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 187, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/lib/data/reviews.ts"],"sourcesContent":["\"use server\"\nimport { revalidatePath } from \"next/cache\"\nimport { sdk } from \"../config\"\nimport { getAuthHeaders } from \"./cookies\"\nimport { HttpTypes } from \"@medusajs/types\"\n\nexport type Review = {\n  id: string\n  seller: {\n    id: string\n    name: string\n    photo: string\n  }\n  reference: string\n  customer_note: string\n  rating: number\n  updated_at: string\n}\n\nexport type Order = HttpTypes.StoreOrder & {\n  seller: { id: string; name: string; reviews?: any[] }\n  reviews: any[]\n}\n\nconst getReviews = async () => {\n  const headers = {\n    ...(await getAuthHeaders()),\n  }\n\n  const reviews = await sdk.client.fetch(\"/store/reviews\", {\n    headers,\n    query: { fields: \"*seller,+customer.id,+order_id\" },\n    method: \"GET\",\n  })\n\n  return reviews as { reviews: Review[] }\n}\n\nconst createReview = async (review: any) => {\n  const headers = {\n    ...(await getAuthHeaders()),\n    \"Content-Type\": \"application/json\",\n    \"x-publishable-api-key\": process.env\n      .NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY as string,\n  }\n\n  const response = await fetch(\n    `${process.env.MEDUSA_BACKEND_URL}/store/reviews`,\n    {\n      headers,\n      method: \"POST\",\n      body: JSON.stringify(review),\n    }\n  ).then((res) => {\n    revalidatePath(\"/user/reviews\")\n    revalidatePath(\"/user/reviews/written\")\n    return res\n  })\n\n  return response.json()\n}\n\nexport { getReviews, createReview }\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;;;;;;;AAqBA,MAAM,aAAa;IACjB,MAAM,UAAU;QACd,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,GAAG;IAC5B;IAEA,MAAM,UAAU,MAAM,oHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB;QACvD;QACA,OAAO;YAAE,QAAQ;QAAiC;QAClD,QAAQ;IACV;IAEA,OAAO;AACT;AAEA,MAAM,eAAe,OAAO;IAC1B,MAAM,UAAU;QACd,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,GAAG;QAC1B,gBAAgB;QAChB,uBAAuB;IAEzB;IAEA,MAAM,WAAW,MAAM,MACrB,GAAG,QAAQ,GAAG,CAAC,kBAAkB,CAAC,cAAc,CAAC,EACjD;QACE;QACA,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB,GACA,IAAI,CAAC,CAAC;QACN,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;IACT;IAEA,OAAO,SAAS,IAAI;AACtB;;;;IAES,uCAAQ,GAAR;IAAY,uCAAU,GAAV;;AAAZ,+OAAA;AAAY,+OAAA"}},
    {"offset": {"line": 240, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 246, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 286, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 411, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;IA+BES,WAAWC;AAFb,OAAO,MAAMJ,eAAe;AA5B5B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAQtB,8BAA8B;AAQ9B,cAAc,qCAAoC;IAIhDS,YAAY;;;;;;;;;;;;QACVC,MAAMZ,UAAUa,QAAQ,yCAAA;QACxBC,EAAAA,IAAM;QACNC,KAAAA;IAAAA;IAAU;gBACV,IAAA;YAAA;YAAA,0BAA2C;wBAC3CC,IAAAA;oBAAAA,OAAY;oBAAA;gCACZC,IAAAA;4BAAAA,KAAU;4BAAA;wCACVC,IAAAA;oCAAAA,KAAU,EAAE;oCAAA;4CACd,QAAA;4CAAA;4CAAA;6CACAC,UAAU;sDACRC,IAAAA,CAAAA;gDAAAA,CAAYnB,OAAAA;oDAAAA,IAAAA;oDAAAA;iDAAAA;;2CACd;oCACF;oCAAE","ignoreList":[0]}},
    {"offset": {"line": 552, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}