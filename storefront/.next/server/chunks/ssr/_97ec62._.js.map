{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/lib/helpers/seo.ts"],"sourcesContent":["import { HttpTypes } from \"@medusajs/types\"\nimport { Metadata } from \"next\"\nimport { headers } from \"next/headers\"\n\nexport const generateProductMetadata = async (\n  product: HttpTypes.StoreProduct\n): Promise<Metadata> => {\n  const headersList = await headers()\n  const host = headersList.get(\"host\")\n  const protocol = headersList.get(\"x-forwarded-proto\") || \"https\"\n\n  return {\n    title: product?.title,\n    description: `${product?.title} - ${process.env.NEXT_PUBLIC_SITE_NAME}`,\n    robots: \"index, follow\",\n    metadataBase: new URL(`${protocol}://${host}/products/${product?.handle}`),\n\n    openGraph: {\n      title: product?.title,\n      description: `${product?.title} - ${process.env.NEXT_PUBLIC_SITE_NAME}`,\n      url: `${protocol}://${host}/products/${product?.handle}`,\n      siteName: process.env.NEXT_PUBLIC_SITE_NAME,\n      images: [\n        {\n          url:\n            product?.thumbnail ||\n            `${protocol}://${host}/images/placeholder.svg`,\n          width: 1200,\n          height: 630,\n          alt: product?.title,\n        },\n      ],\n      type: \"website\",\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title: product?.title,\n      description: `${product?.title} - ${process.env.NEXT_PUBLIC_SITE_NAME}`,\n      images: [\n        product?.thumbnail || `${protocol}://${host}/images/placeholder.svg`,\n      ],\n    },\n  }\n}\n\nexport const generateCategoryMetadata = async (\n  category: HttpTypes.StoreProductCategory\n) => {\n  const headersList = await headers()\n  const host = headersList.get(\"host\")\n  const protocol = headersList.get(\"x-forwarded-proto\") || \"https\"\n\n  return {\n    robots: \"index, follow\",\n    metadataBase: new URL(\n      `${protocol}://${host}/categories/${category.handle}`\n    ),\n    title: `${category.name} Category`,\n    description: `${category.name} Category - ${process.env.NEXT_PUBLIC_SITE_NAME}`,\n\n    openGraph: {\n      title: category.name,\n      description: `${category.name} Category - ${process.env.NEXT_PUBLIC_SITE_NAME}`,\n      url: `${protocol}://${host}/categories/${category.handle}`,\n      siteName: process.env.NEXT_PUBLIC_SITE_NAME,\n      images: [\n        {\n          url:\n            `${protocol}://${host}/images/categories/${category.handle}.png` ||\n            `${protocol}://${host}/images/placeholder.svg`,\n          width: 1200,\n          height: 630,\n          alt: category.name,\n        },\n      ],\n      type: \"website\",\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title: category.name,\n      description: `${category.name} Category - ${process.env.NEXT_PUBLIC_SITE_NAME}`,\n      images: [\n        `${protocol}://${host}/images/categories/${category.handle}.png` ||\n          `${protocol}://${host}/images/placeholder.svg`,\n      ],\n    },\n  }\n}\n"],"names":[],"mappings":";;;;AAEA;;AAEO,MAAM,0BAA0B,OACrC;IAEA,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,MAAM,OAAO,YAAY,GAAG,CAAC;IAC7B,MAAM,WAAW,YAAY,GAAG,CAAC,wBAAwB;IAEzD,OAAO;QACL,OAAO,SAAS;QAChB,aAAa,GAAG,SAAS,MAAM,GAAG,wDAAqC;QACvE,QAAQ;QACR,cAAc,IAAI,IAAI,GAAG,SAAS,GAAG,EAAE,KAAK,UAAU,EAAE,SAAS,QAAQ;QAEzE,WAAW;YACT,OAAO,SAAS;YAChB,aAAa,GAAG,SAAS,MAAM,GAAG,wDAAqC;YACvE,KAAK,GAAG,SAAS,GAAG,EAAE,KAAK,UAAU,EAAE,SAAS,QAAQ;YACxD,QAAQ;YACR,QAAQ;gBACN;oBACE,KACE,SAAS,aACT,GAAG,SAAS,GAAG,EAAE,KAAK,uBAAuB,CAAC;oBAChD,OAAO;oBACP,QAAQ;oBACR,KAAK,SAAS;gBAChB;aACD;YACD,MAAM;QACR;QACA,SAAS;YACP,MAAM;YACN,OAAO,SAAS;YAChB,aAAa,GAAG,SAAS,MAAM,GAAG,wDAAqC;YACvE,QAAQ;gBACN,SAAS,aAAa,GAAG,SAAS,GAAG,EAAE,KAAK,uBAAuB,CAAC;aACrE;QACH;IACF;AACF;AAEO,MAAM,2BAA2B,OACtC;IAEA,MAAM,cAAc,MAAM,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IAChC,MAAM,OAAO,YAAY,GAAG,CAAC;IAC7B,MAAM,WAAW,YAAY,GAAG,CAAC,wBAAwB;IAEzD,OAAO;QACL,QAAQ;QACR,cAAc,IAAI,IAChB,GAAG,SAAS,GAAG,EAAE,KAAK,YAAY,EAAE,SAAS,MAAM,EAAE;QAEvD,OAAO,GAAG,SAAS,IAAI,CAAC,SAAS,CAAC;QAClC,aAAa,GAAG,SAAS,IAAI,CAAC,YAAY,wDAAqC;QAE/E,WAAW;YACT,OAAO,SAAS,IAAI;YACpB,aAAa,GAAG,SAAS,IAAI,CAAC,YAAY,wDAAqC;YAC/E,KAAK,GAAG,SAAS,GAAG,EAAE,KAAK,YAAY,EAAE,SAAS,MAAM,EAAE;YAC1D,QAAQ;YACR,QAAQ;gBACN;oBACE,KACE,GAAG,SAAS,GAAG,EAAE,KAAK,mBAAmB,EAAE,SAAS,MAAM,CAAC,IAAI,CAAC,IAChE,GAAG,SAAS,GAAG,EAAE,KAAK,uBAAuB,CAAC;oBAChD,OAAO;oBACP,QAAQ;oBACR,KAAK,SAAS,IAAI;gBACpB;aACD;YACD,MAAM;QACR;QACA,SAAS;YACP,MAAM;YACN,OAAO,SAAS,IAAI;YACpB,aAAa,GAAG,SAAS,IAAI,CAAC,YAAY,wDAAqC;YAC/E,QAAQ;gBACN,GAAG,SAAS,GAAG,EAAE,KAAK,mBAAmB,EAAE,SAAS,MAAM,CAAC,IAAI,CAAC,IAC9D,GAAG,SAAS,GAAG,EAAE,KAAK,uBAAuB,CAAC;aACjD;QACH;IACF;AACF"}},
    {"offset": {"line": 81, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/app/%5Blocale%5D/%28main%29/products/%5Bhandle%5D/page.tsx"],"sourcesContent":["import { ProductDetailsPage } from \"@/components/sections\"\nimport { listProducts } from \"@/lib/data/products\"\nimport { generateProductMetadata } from \"@/lib/helpers/seo\"\nimport type { Metadata } from \"next\"\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ handle: string; locale: string }>\n}): Promise<Metadata> {\n  const { handle, locale } = await params\n\n  const prod = await listProducts({\n    countryCode: locale,\n    queryParams: { handle },\n  }).then(({ response }) => response.products[0])\n\n  return generateProductMetadata(prod)\n}\n\nexport default async function ProductPage({\n  params,\n}: {\n  params: Promise<{ handle: string; locale: string }>\n}) {\n  const { handle, locale } = await params\n\n  return (\n    <main className=\"container\">\n      <ProductDetailsPage handle={handle} locale={locale} />\n    </main>\n  )\n}\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAFA;;;;;AAKO,eAAe,iBAAiB,EACrC,MAAM,EAGP;IACC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IAEjC,MAAM,OAAO,MAAM,CAAA,GAAA,8HAAA,CAAA,eAAY,AAAD,EAAE;QAC9B,aAAa;QACb,aAAa;YAAE;QAAO;IACxB,GAAG,IAAI,CAAC,CAAC,EAAE,QAAQ,EAAE,GAAK,SAAS,QAAQ,CAAC,EAAE;IAE9C,OAAO,CAAA,GAAA,4HAAA,CAAA,0BAAuB,AAAD,EAAE;AACjC;AAEe,eAAe,YAAY,EACxC,MAAM,EAGP;IACC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IAEjC,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC,0KAAA,CAAA,qBAAkB;YAAC,QAAQ;YAAQ,QAAQ;;;;;;;;;;;AAGlD"}},
    {"offset": {"line": 128, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 140, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/lib/data/reviews.ts"],"sourcesContent":["\"use server\"\nimport { revalidatePath } from \"next/cache\"\nimport { sdk } from \"../config\"\nimport { getAuthHeaders } from \"./cookies\"\nimport { HttpTypes } from \"@medusajs/types\"\n\nexport type Review = {\n  id: string\n  seller: {\n    id: string\n    name: string\n    photo: string\n  }\n  reference: string\n  customer_note: string\n  rating: number\n  updated_at: string\n}\n\nexport type Order = HttpTypes.StoreOrder & {\n  seller: { id: string; name: string; reviews?: any[] }\n  reviews: any[]\n}\n\nconst getReviews = async () => {\n  const headers = {\n    ...(await getAuthHeaders()),\n  }\n\n  const reviews = await sdk.client.fetch(\"/store/reviews\", {\n    headers,\n    query: { fields: \"*seller,+customer.id,+order_id\" },\n    method: \"GET\",\n  })\n\n  return reviews as { reviews: Review[] }\n}\n\nconst createReview = async (review: any) => {\n  const headers = {\n    ...(await getAuthHeaders()),\n    \"Content-Type\": \"application/json\",\n    \"x-publishable-api-key\": process.env\n      .NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY as string,\n  }\n\n  const response = await fetch(\n    `${process.env.MEDUSA_BACKEND_URL}/store/reviews`,\n    {\n      headers,\n      method: \"POST\",\n      body: JSON.stringify(review),\n    }\n  ).then((res) => {\n    revalidatePath(\"/user/reviews\")\n    revalidatePath(\"/user/reviews/written\")\n    return res\n  })\n\n  return response.json()\n}\n\nexport { getReviews, createReview }\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;;;;;;;AAqBA,MAAM,aAAa;IACjB,MAAM,UAAU;QACd,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,GAAG;IAC5B;IAEA,MAAM,UAAU,MAAM,oHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB;QACvD;QACA,OAAO;YAAE,QAAQ;QAAiC;QAClD,QAAQ;IACV;IAEA,OAAO;AACT;AAEA,MAAM,eAAe,OAAO;IAC1B,MAAM,UAAU;QACd,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,GAAG;QAC1B,gBAAgB;QAChB,uBAAuB;IAEzB;IAEA,MAAM,WAAW,MAAM,MACrB,GAAG,QAAQ,GAAG,CAAC,kBAAkB,CAAC,cAAc,CAAC,EACjD;QACE;QACA,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB,GACA,IAAI,CAAC,CAAC;QACN,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;IACT;IAEA,OAAO,SAAS,IAAI;AACtB;;;;IAES,uCAAQ,GAAR;IAAY,uCAAU,GAAV;;AAAZ,+OAAA;AAAY,+OAAA"}},
    {"offset": {"line": 193, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 199, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 353, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;IA+BES,WAAWC;AAFb,OAAO,MAAMJ,eAAe;AA5B5B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAQtB,8BAA8B;AAQ9B,cAAc,qCAAoC;IAIhDS,YAAY;;;;;;;;;;;;QACVC,MAAMZ,UAAUa,QAAQ,yCAAA;QACxBC,EAAAA,IAAM;QACNC,KAAAA;IAAAA;IAAU;gBACV,IAAA;YAAA;YAAA,0BAA2C;wBAC3CC,IAAAA;oBAAAA,OAAY;oBAAA;gCACZC,IAAAA;4BAAAA,KAAU;4BAAA;wCACVC,IAAAA;oCAAAA,KAAU,EAAE;oCAAA;4CACd,QAAA;4CAAA;4CAAA;6CACAC,UAAU;sDACRC,IAAAA,CAAAA;gDAAAA,CAAYnB,OAAAA;oDAAAA,IAAAA;oDAAAA;iDAAAA;;2CACd;oCACF;oCAAE","ignoreList":[0]}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}