{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/lib/helpers/hreflang.ts"],"sourcesContent":["export const toHreflang = (code: string): string => {\n  const map: Record<string, string> = {\n    us: \"en-US\",\n    gb: \"en-GB\",\n    au: \"en-AU\",\n    ca: \"en-CA\",\n    ie: \"en-IE\",\n    pl: \"pl-PL\",\n    de: \"de-DE\",\n    fr: \"fr-FR\",\n    es: \"es-ES\",\n    it: \"it-IT\",\n    nl: \"nl-NL\",\n    se: \"sv-SE\",\n    no: \"nb-NO\",\n    dk: \"da-DK\",\n    cz: \"cs-CZ\",\n    sk: \"sk-SK\",\n    pt: \"pt-PT\",\n    br: \"pt-BR\",\n    at: \"de-AT\",\n    ch: \"de-CH\",\n    cn: \"zh-CN\",\n    jp: \"ja-JP\",\n    kr: \"ko-KR\",\n    tw: \"zh-TW\",\n    hk: \"zh-HK\",\n    sg: \"en-SG\",\n    my: \"ms-MY\",\n  }\n  return map[code] || code\n}\n"],"names":[],"mappings":";;;AAAO,MAAM,aAAa,CAAC;IACzB,MAAM,MAA8B;QAClC,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;QACJ,IAAI;IACN;IACA,OAAO,GAAG,CAAC,KAAK,IAAI;AACtB"}},
    {"offset": {"line": 42, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 48, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/app/%5Blocale%5D/%28main%29/page.tsx"],"sourcesContent":["import {\n  BannerSection,\n  BlogSection,\n  Hero,\n  HomeCategories,\n  HomeProductSection,\n  ShopByStyleSection,\n} from \"@/components/sections\"\n\nimport type { Metadata } from \"next\"\nimport { headers } from \"next/headers\"\nimport Script from \"next/script\"\nimport { listRegions } from \"@/lib/data/regions\"\nimport { toHreflang } from \"@/lib/helpers/hreflang\"\n\nexport async function generateMetadata({\n  params,\n}: {\n  params: Promise<{ locale: string }>\n}): Promise<Metadata> {\n  const { locale } = await params\n\n  const headersList = await headers()\n  const host = headersList.get(\"host\")\n  const protocol = headersList.get(\"x-forwarded-proto\") || \"https\"\n  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || `${protocol}://${host}`\n\n  // Build alternates based on available regions (locales)\n  let languages: Record<string, string> = {}\n  try {\n    const regions = await listRegions()\n    const locales = Array.from(\n      new Set(\n        (regions || [])\n          .map((r) => r.countries?.map((c) => c.iso_2) || [])\n          .flat()\n          .filter(Boolean)\n      )\n    ) as string[]\n\n    languages = locales.reduce<Record<string, string>>((acc, code) => {\n      const hrefLang = toHreflang(code)\n      acc[hrefLang] = `${baseUrl}/${code}`\n      return acc\n    }, {})\n  } catch {\n    // Fallback: only current locale\n    languages = { [toHreflang(locale)]: `${baseUrl}/${locale}` }\n  }\n\n  const title = \"Home\"\n  const description =\n    \"Welcome to Mercur B2C Demo! Create a modern marketplace that you own and customize in every aspect with high-performance, fully customizable storefront.\"\n  const ogImage = \"/B2C_Storefront_Open_Graph.png\"\n  const canonical = `${baseUrl}/${locale}`\n\n  return {\n    title,\n    description,\n    robots: {\n      index: true,\n      follow: true,\n      googleBot: {\n        index: true,\n        follow: true,\n        \"max-image-preview\": \"large\",\n        \"max-video-preview\": -1,\n        \"max-snippet\": -1,\n      },\n    },\n    alternates: {\n      canonical,\n      languages: {\n        ...languages,\n        \"x-default\": baseUrl,\n      },\n    },\n    openGraph: {\n      title: `${title} | ${\n        process.env.NEXT_PUBLIC_SITE_NAME ||\n        \"Mercur B2C Demo - Marketplace Storefront\"\n      }`,\n      description,\n      url: canonical,\n      siteName:\n        process.env.NEXT_PUBLIC_SITE_NAME ||\n        \"Mercur B2C Demo - Marketplace Storefront\",\n      type: \"website\",\n      images: [\n        {\n          url: ogImage.startsWith(\"http\") ? ogImage : `${baseUrl}${ogImage}`,\n          width: 1200,\n          height: 630,\n          alt:\n            process.env.NEXT_PUBLIC_SITE_NAME ||\n            \"Mercur B2C Demo - Marketplace Storefront\",\n        },\n      ],\n    },\n    twitter: {\n      card: \"summary_large_image\",\n      title,\n      description,\n      images: [ogImage.startsWith(\"http\") ? ogImage : `${baseUrl}${ogImage}`],\n    },\n  }\n}\n\nexport default async function Home({\n  params,\n}: {\n  params: Promise<{ locale: string }>\n}) {\n  const { locale } = await params\n\n  const headersList = await headers()\n  const host = headersList.get(\"host\")\n  const protocol = headersList.get(\"x-forwarded-proto\") || \"https\"\n  const baseUrl = process.env.NEXT_PUBLIC_BASE_URL || `${protocol}://${host}`\n\n  const siteName =\n    process.env.NEXT_PUBLIC_SITE_NAME ||\n    \"Mercur B2C Demo - Marketplace Storefront\"\n\n  return (\n    <main className=\"flex flex-col gap-8 row-start-2 items-center sm:items-start text-primary\">\n      <link\n        rel=\"preload\"\n        as=\"image\"\n        href=\"/images/hero/Image.jpg\"\n        imageSrcSet=\"/images/hero/Image.jpg 700w\"\n        imageSizes=\"(min-width: 1024px) 50vw, 100vw\"\n      />\n      {/* Organization JSON-LD */}\n      <Script\n        id=\"ld-org\"\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"Organization\",\n            name: siteName,\n            url: `${baseUrl}/${locale}`,\n            logo: `${baseUrl}/favicon.ico`,\n          }),\n        }}\n      />\n      {/* WebSite JSON-LD */}\n      <Script\n        id=\"ld-website\"\n        type=\"application/ld+json\"\n        dangerouslySetInnerHTML={{\n          __html: JSON.stringify({\n            \"@context\": \"https://schema.org\",\n            \"@type\": \"WebSite\",\n            name: siteName,\n            url: `${baseUrl}/${locale}`,\n            inLanguage: toHreflang(locale),\n          }),\n        }}\n      />\n\n      <Hero\n        image=\"/images/hero/Image.jpg\"\n        heading=\"Snag your style in a flash\"\n        paragraph=\"Buy, sell, and discover pre-loved gems from the trendiest brands.\"\n        buttons={[\n          { label: \"Buy now\", path: \"/categories\" },\n          {\n            label: \"Sell now\",\n            path:\n              process.env.NEXT_PUBLIC_ALGOLIA_ID === \"UO3C5Y8NHX\"\n                ? \"https://vendor-sandbox.vercel.app/\"\n                : \"https://vendor.mercurjs.com\",\n          },\n        ]}\n      />\n      <div className=\"px-4 lg:px-8 w-full\">\n        <HomeProductSection heading=\"trending listings\" locale={locale} home />\n      </div>\n      <div className=\"px-4 lg:px-8 w-full\">\n        <HomeCategories heading=\"SHOP BY CATEGORY\" />\n      </div>\n      <BannerSection />\n      <ShopByStyleSection />\n      <BlogSection />\n    </main>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 268, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/lib/data/reviews.ts"],"sourcesContent":["\"use server\"\nimport { revalidatePath } from \"next/cache\"\nimport { sdk } from \"../config\"\nimport { getAuthHeaders } from \"./cookies\"\nimport { HttpTypes } from \"@medusajs/types\"\n\nexport type Review = {\n  id: string\n  seller: {\n    id: string\n    name: string\n    photo: string\n  }\n  reference: string\n  customer_note: string\n  rating: number\n  updated_at: string\n}\n\nexport type Order = HttpTypes.StoreOrder & {\n  seller: { id: string; name: string; reviews?: any[] }\n  reviews: any[]\n}\n\nconst getReviews = async () => {\n  const headers = {\n    ...(await getAuthHeaders()),\n  }\n\n  const reviews = await sdk.client.fetch(\"/store/reviews\", {\n    headers,\n    query: { fields: \"*seller,+customer.id,+order_id\" },\n    method: \"GET\",\n  })\n\n  return reviews as { reviews: Review[] }\n}\n\nconst createReview = async (review: any) => {\n  const headers = {\n    ...(await getAuthHeaders()),\n    \"Content-Type\": \"application/json\",\n    \"x-publishable-api-key\": process.env\n      .NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY as string,\n  }\n\n  const response = await fetch(\n    `${process.env.MEDUSA_BACKEND_URL}/store/reviews`,\n    {\n      headers,\n      method: \"POST\",\n      body: JSON.stringify(review),\n    }\n  ).then((res) => {\n    revalidatePath(\"/user/reviews\")\n    revalidatePath(\"/user/reviews/written\")\n    return res\n  })\n\n  return response.json()\n}\n\nexport { getReviews, createReview }\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;;;;;;;AAqBA,MAAM,aAAa;IACjB,MAAM,UAAU;QACd,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,GAAG;IAC5B;IAEA,MAAM,UAAU,MAAM,oHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB;QACvD;QACA,OAAO;YAAE,QAAQ;QAAiC;QAClD,QAAQ;IACV;IAEA,OAAO;AACT;AAEA,MAAM,eAAe,OAAO;IAC1B,MAAM,UAAU;QACd,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,GAAG;QAC1B,gBAAgB;QAChB,uBAAuB;IAEzB;IAEA,MAAM,WAAW,MAAM,MACrB,GAAG,QAAQ,GAAG,CAAC,kBAAkB,CAAC,cAAc,CAAC,EACjD;QACE;QACA,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB,GACA,IAAI,CAAC,CAAC;QACN,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;IACT;IAEA,OAAO,SAAS,IAAI;AACtB;;;;IAES,uCAAQ,GAAR;IAAY,uCAAU,GAAV;;AAAZ,+OAAA;AAAY,+OAAA"}},
    {"offset": {"line": 333, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 339, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 376, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 492, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/node_modules/next/dist/client/script.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js <module evaluation>\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,+BAA+B,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 499, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/node_modules/next/dist/client/script.js/proxy.cjs"],"sourcesContent":["const { createClientModuleProxy } = require(\"react-server-dom-turbopack/server.edge\");\n\n__turbopack_export_namespace__(createClientModuleProxy(\"[project]/node_modules/next/dist/client/script.js\"));\n"],"names":[],"mappings":"AAAA,MAAM,EAAE,uBAAuB,EAAE;AAEjC,+BAA+B,wBAAwB","ignoreList":[0]}},
    {"offset": {"line": 501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 507, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/node_modules/next/src/client/script.tsx"],"sourcesContent":["'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  const { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript(props)\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n"],"names":["handleClientScriptLoad","initScriptLoader","ScriptCache","Map","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","forEach","stylesheet","as","window","head","document","link","createElement","type","rel","href","appendChild","loadScript","props","src","id","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","has","add","get","then","afterLoad","el","loadPromise","Promise","resolve","reject","addEventListener","e","call","catch","innerHTML","__html","textContent","Array","isArray","join","set","setAttributesFromProps","setAttribute","body","requestIdleCallback","loadLazyScript","readyState","addBeforeInteractiveToCache","scripts","querySelectorAll","script","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","JSON","stringify","preload","integrity","crossOrigin","Object","defineProperty","value"],"mappings":"","ignoreList":[0]}},
    {"offset": {"line": 511, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 516, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/node_modules/next/script.js"],"sourcesContent":["module.exports = require('./dist/client/script')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 517, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 523, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/node_modules/next/dist/src/build/templates/app-page.ts"],"sourcesContent":["import type { LoaderTree } from '../../server/lib/app-dir-module'\nimport { AppPageRouteModule } from '../../server/route-modules/app-page/module.compiled' with { 'turbopack-transition': 'next-ssr' }\nimport { RouteKind } from '../../server/route-kind'\n\n// These are injected by the loader afterwards.\n\n/**\n * The tree created in next-app-loader that holds component segments and modules\n * and I've updated it.\n */\ndeclare const tree: LoaderTree\ndeclare const pages: any\n\n// We inject the tree and pages here so that we can use them in the route\n// module.\n// INJECT:tree\n// INJECT:pages\n\nexport { tree, pages }\n\nexport { default as GlobalError } from 'VAR_MODULE_GLOBAL_ERROR'\n\n// These are injected by the loader afterwards.\ndeclare const __next_app_require__: any\ndeclare const __next_app_load_chunk__: any\n\n// INJECT:__next_app_require__\n// INJECT:__next_app_load_chunk__\n\nexport const __next_app__ = {\n  require: __next_app_require__,\n  loadChunk: __next_app_load_chunk__,\n}\n\nexport * from '../../server/app-render/entry-base'\n\n// Create and export the route module that will be consumed.\nexport const routeModule = new AppPageRouteModule({\n  definition: {\n    kind: RouteKind.APP_PAGE,\n    page: 'VAR_DEFINITION_PAGE',\n    pathname: 'VAR_DEFINITION_PATHNAME',\n    // The following aren't used in production.\n    bundlePath: '',\n    filename: '',\n    appPaths: [],\n  },\n  userland: {\n    loaderTree: tree,\n  },\n})\n"],"names":["AppPageRouteModule","RouteKind","tree","pages","default","GlobalError","__next_app__","require","__next_app_require__","loadChunk","__next_app_load_chunk__","routeModule","definition","kind","APP_PAGE","page","pathname","bundlePath","filename","appPaths","userland","loaderTree"],"mappings":";;;;;;IA+BES,WAAWC;AAFb,OAAO,MAAMJ,eAAe;AA5B5B,SAASN,kBAAkB,QAAQ,2DAA2D;IAAE,wBAAwB;AAAW,EAAC;AAYpI,yEAAyE;AAEzE,cAAc;AAGd,SAASE,IAAI,EAAEC,KAAK,GAAE;AAQtB,8BAA8B;AAQ9B,cAAc,qCAAoC;IAIhDS,YAAY;;;;;;;;;;;;QACVC,MAAMZ,UAAUa,QAAQ,yCAAA;QACxBC,EAAAA,IAAM;QACNC,KAAAA;IAAAA;IAAU;gBACV,IAAA;YAAA;YAAA,0BAA2C;wBAC3CC,IAAAA;oBAAAA,OAAY;oBAAA;gCACZC,IAAAA;4BAAAA,KAAU;4BAAA;iCACVC,UAAU,EAAE;kCACd,QAAA,CAAA;gCAAA,QAAA;oCAAA,IAAA;oCAAA;iCAAA;;2BACAC,UAAU;;yBACRC,YAAYnB;0BACd,QAAA,CAAA;wBAAA,UAAA;4BAAA,IAAA;4BAAA;yBAAA;oBACF;iBAAA,CAAE","ignoreList":[0]}},
    {"offset": {"line": 648, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}