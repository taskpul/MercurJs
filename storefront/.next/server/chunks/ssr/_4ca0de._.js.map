{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/app/%5Blocale%5D/%28main%29/user/wishlist/page.tsx"],"sourcesContent":["import { retrieveCustomer } from \"@/lib/data/customer\"\nimport { redirect } from \"next/navigation\"\nimport { isEmpty } from \"lodash\"\nimport { Wishlist as WishlistType } from \"@/types/wishlist\"\nimport LocalizedClientLink from \"@/components/molecules/LocalizedLink/LocalizedLink\"\nimport { Button } from \"@/components/atoms\"\nimport { WishlistItem } from \"@/components/cells\"\nimport { getUserWishlists } from \"@/lib/data/wishlist\"\nimport { HttpTypes } from \"@medusajs/types\"\nimport { UserNavigation } from \"@/components/molecules\"\n\nexport default async function Wishlist() {\n  const user = await retrieveCustomer()\n\n  let wishlist: WishlistType[] = []\n  if (user) {\n    const response = await getUserWishlists()\n    wishlist = response.wishlists\n  }\n\n  const count = wishlist?.[0]?.products?.length || 0\n\n  if (!user) {\n    redirect(\"/user\")\n  }\n\n  return (\n    <main className=\"container\">\n      <div className=\"grid grid-cols-1 md:grid-cols-4 mt-6 gap-5 md:gap-8\">\n        <UserNavigation />\n        <div className=\"md:col-span-3 space-y-8\">\n          {isEmpty(wishlist?.[0]?.products) ? (\n            <div className=\"w-96 mx-auto flex flex-col items-center justify-center\">\n              <h2 className=\"heading-lg text-primary uppercase mb-2\">\n                Wishlist\n              </h2>\n              <p className=\"text-lg text-secondary mb-6\">\n                Your wishlist is currently empty.\n              </p>\n              <LocalizedClientLink href=\"/categories\" className=\"w-full\">\n                <Button className=\"w-full\">Explore</Button>\n              </LocalizedClientLink>\n            </div>\n          ) : (\n            <div className=\"flex flex-col gap-6\">\n              <h2 className=\"heading-lg text-primary uppercase\">Wishlist</h2>\n              <div className=\"flex justify-between items-center\">\n                <p>{count} listings</p>\n              </div>\n              <div className=\"flex flex-wrap max-md:justify-center gap-4\">\n                {wishlist?.[0].products?.map((product) => (\n                  <WishlistItem\n                    key={product.id}\n                    product={\n                      product as HttpTypes.StoreProduct & {\n                        calculated_amount: number\n                        currency_code: string\n                      }\n                    }\n                    wishlist={wishlist}\n                    user={user}\n                  />\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </main>\n  )\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AARA;AAQA;AAHA;AADA;;;;;;;;;;AAMe,eAAe;IAC5B,MAAM,OAAO,MAAM,CAAA,GAAA,8HAAA,CAAA,mBAAgB,AAAD;IAElC,IAAI,WAA2B,EAAE;IACjC,IAAI,MAAM;QACR,MAAM,WAAW,MAAM,CAAA,GAAA,8HAAA,CAAA,mBAAgB,AAAD;QACtC,WAAW,SAAS,SAAS;IAC/B;IAEA,MAAM,QAAQ,UAAU,CAAC,EAAE,EAAE,UAAU,UAAU;IAEjD,IAAI,CAAC,MAAM;QACT,CAAA,GAAA,qLAAA,CAAA,WAAQ,AAAD,EAAE;IACX;IAEA,qBACE,8OAAC;QAAK,WAAU;kBACd,cAAA,8OAAC;YAAI,WAAU;;8BACb,8OAAC,mKAAA,CAAA,iBAAc;;;;;8BACf,8OAAC;oBAAI,WAAU;8BACZ,CAAA,GAAA,iIAAA,CAAA,UAAO,AAAD,EAAE,UAAU,CAAC,EAAE,EAAE,0BACtB,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAyC;;;;;;0CAGvD,8OAAC;gCAAE,WAAU;0CAA8B;;;;;;0CAG3C,8OAAC,iKAAA,CAAA,UAAmB;gCAAC,MAAK;gCAAc,WAAU;0CAChD,cAAA,8OAAC,+IAAA,CAAA,SAAM;oCAAC,WAAU;8CAAS;;;;;;;;;;;;;;;;6CAI/B,8OAAC;wBAAI,WAAU;;0CACb,8OAAC;gCAAG,WAAU;0CAAoC;;;;;;0CAClD,8OAAC;gCAAI,WAAU;0CACb,cAAA,8OAAC;;wCAAG;wCAAM;;;;;;;;;;;;0CAEZ,8OAAC;gCAAI,WAAU;0CACZ,UAAU,CAAC,EAAE,CAAC,UAAU,IAAI,CAAC,wBAC5B,8OAAC,2JAAA,CAAA,eAAY;wCAEX,SACE;wCAKF,UAAU;wCACV,MAAM;uCARD,QAAQ,EAAE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBnC"}},
    {"offset": {"line": 162, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 174, "column": 0}, "map": {"version":3,"sources":["file:///root/webmakerr/storefront/src/lib/data/reviews.ts"],"sourcesContent":["\"use server\"\nimport { revalidatePath } from \"next/cache\"\nimport { sdk } from \"../config\"\nimport { getAuthHeaders } from \"./cookies\"\nimport { HttpTypes } from \"@medusajs/types\"\n\nexport type Review = {\n  id: string\n  seller: {\n    id: string\n    name: string\n    photo: string\n  }\n  reference: string\n  customer_note: string\n  rating: number\n  updated_at: string\n}\n\nexport type Order = HttpTypes.StoreOrder & {\n  seller: { id: string; name: string; reviews?: any[] }\n  reviews: any[]\n}\n\nconst getReviews = async () => {\n  const headers = {\n    ...(await getAuthHeaders()),\n  }\n\n  const reviews = await sdk.client.fetch(\"/store/reviews\", {\n    headers,\n    query: { fields: \"*seller,+customer.id,+order_id\" },\n    method: \"GET\",\n  })\n\n  return reviews as { reviews: Review[] }\n}\n\nconst createReview = async (review: any) => {\n  const headers = {\n    ...(await getAuthHeaders()),\n    \"Content-Type\": \"application/json\",\n    \"x-publishable-api-key\": process.env\n      .NEXT_PUBLIC_MEDUSA_PUBLISHABLE_KEY as string,\n  }\n\n  const response = await fetch(\n    `${process.env.MEDUSA_BACKEND_URL}/store/reviews`,\n    {\n      headers,\n      method: \"POST\",\n      body: JSON.stringify(review),\n    }\n  ).then((res) => {\n    revalidatePath(\"/user/reviews\")\n    revalidatePath(\"/user/reviews/written\")\n    return res\n  })\n\n  return response.json()\n}\n\nexport { getReviews, createReview }\n"],"names":[],"mappings":";;;;;;AACA;AACA;AACA;;;;;;;AAqBA,MAAM,aAAa;IACjB,MAAM,UAAU;QACd,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,GAAG;IAC5B;IAEA,MAAM,UAAU,MAAM,oHAAA,CAAA,MAAG,CAAC,MAAM,CAAC,KAAK,CAAC,kBAAkB;QACvD;QACA,OAAO;YAAE,QAAQ;QAAiC;QAClD,QAAQ;IACV;IAEA,OAAO;AACT;AAEA,MAAM,eAAe,OAAO;IAC1B,MAAM,UAAU;QACd,GAAI,MAAM,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,GAAG;QAC1B,gBAAgB;QAChB,uBAAuB;IAEzB;IAEA,MAAM,WAAW,MAAM,MACrB,GAAG,QAAQ,GAAG,CAAC,kBAAkB,CAAC,cAAc,CAAC,EACjD;QACE;QACA,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;IACvB,GACA,IAAI,CAAC,CAAC;QACN,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,CAAA,GAAA,6HAAA,CAAA,iBAAc,AAAD,EAAE;QACf,OAAO;IACT;IAEA,OAAO,SAAS,IAAI;AACtB;;;;IAES,uCAAQ,GAAR;IAAY,uCAAU,GAAV;;AAAZ,+OAAA;AAAY,+OAAA"}},
    {"offset": {"line": 227, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 233, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":""}},
    {"offset": {"line": 270, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}